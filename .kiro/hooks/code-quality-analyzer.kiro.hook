{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Listen to source code files in the repository. When changes are detected, analyze the modified code for potential improvements, including code smells, design patterns, and best practices. Generate suggestions for improving code quality while maintaining the existing functionality. Focus on readability, maintainability, and performance optimizations.",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "**/*.ts",
      "**/*.js",
      "**/*.tsx",
      "**/*.jsx",
      "**/*.py",
      "**/*.java",
      "**/*.cpp",
      "**/*.c",
      "**/*.cs",
      "**/*.go",
      "**/*.rs",
      "**/*.php",
      "**/*.rb",
      "**/*.swift",
      "**/*.kt"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified source code files for potential improvements. Focus on:\n\n1. **Code Smells**: Identify long methods, large classes, duplicate code, complex conditionals, and other maintainability issues\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check for adherence to language-specific best practices and coding standards\n4. **Performance**: Identify potential performance bottlenecks and suggest optimizations\n5. **Readability**: Suggest improvements for variable naming, function structure, and code organization\n6. **Security**: Flag potential security vulnerabilities or unsafe practices\n7. **Testing**: Suggest areas that need better test coverage or improved test structure\n\nFor each suggestion:\n- Explain WHY the change would be beneficial\n- Provide a concrete example of the improved code\n- Prioritize suggestions by impact (High/Medium/Low)\n- Ensure suggestions maintain existing functionality\n\nFormat your response as actionable recommendations that a developer can immediately implement."
  }
}