{
  "enabled": true,
  "name": "GitGov File Analyzer",
  "description": "Analyze opened files and show GitGovernance context, related tasks, and work suggestions",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "packages/**/*.{ts",
      "js",
      "md}"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "When opening files in the GitGovernance project, provide intelligent context analysis:\n\n1. **File Context Detection**:\n   - Parse file path to identify: package (core/cli/protocol), component type\n   - Detect if file is: adapter, command, module, spec, test, documentation\n   - Extract component name: BacklogAdapter, TaskCommand, EventBusModule, etc.\n   - Determine architectural role in GitGovernance system\n\n2. **Related Task Discovery**:\n   - Execute `gitgov task list --json --quiet` to get all tasks\n   - Search for tasks mentioning:\n     - File name or component name in title/description\n     - Package tags matching file location (core, cli, etc.)\n     - Related functionality keywords\n   - Prioritize active and review status tasks\n\n3. **Context Summary Display**:\n   ```\n   üìÅ File Context: packages/core/src/adapters/backlog_adapter.ts\n   üèóÔ∏è Component: BacklogAdapter (Domain Logic)\n   üì¶ Package: @gitgov/core\n   üìã Related Tasks (2 found):\n   - [task-123] Fix BacklogAdapter validation (active, high)\n   - [task-456] Add BacklogAdapter tests (draft, medium)\n   üí° Suggestions:\n   - Task-123 is active and high priority - focus here first\n   - Consider running tests: pnpm --filter @gitgov/core test\n   ```\n\n4. **Architecture Context**:\n   - For adapters: Show adapter pattern info and dependencies\n   - For commands: Show CLI command structure and usage\n   - For modules: Show module purpose and integration points\n   - For specs: Show implementation status and related tasks\n\n5. **Work Suggestions**:\n   - If active tasks exist: \"Continue work on task-123\"\n   - If no active tasks: \"Consider creating task for improvements\"\n   - If tests exist: \"Run tests to verify current state\"\n   - If documentation: \"Check if implementation matches spec\"\n\n6. **Quick Actions**:\n   - Show relevant GitGovernance commands for the file context\n   - Suggest: \"View related tasks\", \"Create new task\", \"Run tests\", \"Check status\"\n   - Provide copy-pasteable commands\n\n7. **Performance Optimization**:\n   - Use cached task data from indexer\n   - Only analyze files in GitGovernance packages\n   - Limit output to most relevant information (top 3 tasks)\n\n8. **Error Handling**:\n   - If no GitGovernance context: Show minimal info or skip\n   - If task lookup fails: Show file context only\n   - Graceful degradation without blocking file opening\n\nAlways provide useful context without overwhelming the developer."
  }
}