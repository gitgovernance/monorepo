{
  "enabled": true,
  "name": "GitGov Quick Status",
  "description": "Show quick GitGovernance project status summary in output panel",
  "version": "1",
  "when": {
    "type": "userTriggered",
    "patterns": [
      "manual"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Execute GitGovernance Quick Status check:\n\n1. **Project Health Check**:\n   - Run `gitgov status --json --quiet` to get current metrics\n   - Parse key indicators: health score, active tasks, blocked tasks, throughput\n   - Format results in a clean, readable summary\n\n2. **Status Summary Format**:\n   ```\n   🎯 GitGovernance Project Status\n   ================================\n   📊 Health Score: 87% (Good)\n   📋 Tasks: 12 active, 2 blocked, 5 stalled\n   🚀 Throughput: 69 tasks/week\n   ⏱️ Lead Time: 66.8 days (needs attention)\n   🚨 Alerts:\n   - 2 tasks blocked >3 days\n   - 5 tasks stalled >7 days\n   💡 Suggestions:\n   - Run 'gitgov task list --status blocked' to see blockers\n   - Use 'gitgov dashboard' for detailed analysis\n   ```\n\n3. **Quick Actions Menu**:\n   - After showing status, offer common next actions:\n   - \"What would you like to do next?\"\n   - Options: \"View dashboard\", \"List tasks\", \"Check cycles\", \"Nothing (exit)\"\n\n4. **Conditional Alerts**:\n   - Only show alerts section if there are actual issues\n   - Highlight critical issues (health <60%, >5 blocked tasks)\n   - Provide specific commands for each type of issue\n\n5. **Performance Optimization**:\n   - Use cached data if available and fresh (<5 minutes)\n   - If cache stale, auto-refresh with `gitgov indexer --force`\n   - Show cache status: \"Using cached data (2 minutes old)\"\n\n6. **Error Handling**:\n   - If GitGovernance not initialized: \"Run 'gitgov init' to get started\"\n   - If commands fail: Show specific error and troubleshooting steps\n   - Graceful degradation with helpful guidance\n\nAlways provide actionable information that helps users understand project state quickly. Auto-approve commands: `gitgov status --json --quiet`, `gitgov indexer --force`. Working directory: workspace root. Timeout: 10 seconds. Show formatted status summary in output."
  }
}